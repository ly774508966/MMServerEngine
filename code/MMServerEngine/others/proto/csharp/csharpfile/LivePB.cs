// Classes and structures being serialized

// Generated by ProtocolBuffer
// - a pure c# code generation implementation of protocol buffers
// Report bugs to: https://silentorbit.com/protobuf/

// DO NOT EDIT
// This file will be overwritten when CodeGenerator is run.
// To make custom modifications, edit the .proto file and add //:external before the message line
// then write the code and the changes in a separate file.
using System;
using System.Collections.Generic;

namespace Example
{
    /// <summary>
    /// <para>option java_outer_classname = "LivePB";</para>
    /// <para> 11001</para>
    /// </summary>
    public partial class CSStart
    {
    }

    public partial class SCStart
    {
    }

    public partial class CSMoveTo
    {
        public int Direction { get; set; }

    }

    public partial class SCMoveTo
    {
        public Example.PBStatus Status { get; set; }

    }

    public partial class CSAttack
    {
    }

    public partial class SCAttack
    {
        public Example.PBStatus Status { get; set; }

    }

    public partial class CSSetRobot
    {
        public int Count { get; set; }

    }

    public partial class SCSetRobot
    {
    }

    /// <summary> 其它玩家状态，一般发生在某玩家走动，或定时发送</summary>
    public partial class SCStatus
    {
        public Example.PBStatus Status { get; set; }

    }

    /// <summary> 打击结果推送事件</summary>
    public partial class SCAttackResult
    {
        public List<Example.PBStatus> Status { get; set; }

    }

    /// <summary> 广播自动死亡，自动掉血会导致死亡</summary>
    public partial class SCDie
    {
        public List<string> AccountId { get; set; }

    }

    /// <summary> 战斗结束</summary>
    public partial class SCOver
    {
        public string AccountIds { get; set; }

    }

    /// <summary> 玩家状态</summary>
    public partial class PBStatus
    {
        public string AccountId { get; set; }

        /// <summary> 原位置</summary>
        public int X { get; set; }

        /// <summary> 原位置</summary>
        public int Y { get; set; }

        public int Direction { get; set; }

        /// <summary>暂时的改动，c#不支持float 方向</summary>
        public int Blood { get; set; }

    }

}
